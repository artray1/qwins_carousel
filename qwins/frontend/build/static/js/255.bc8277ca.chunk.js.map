{"version":3,"file":"static/js/255.bc8277ca.chunk.js","mappings":"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","sources":["webpack://react_app/./src/components/VirtualServersPage.module.css?7b56","components/VirtualServersPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainBannerContainer\":\"VirtualServersPage_mainBannerContainer__csccy\",\"mainBannerTextBlock\":\"VirtualServersPage_mainBannerTextBlock__S20tx\",\"countryCard\":\"VirtualServersPage_countryCard__HAtu6\",\"countryHeaderContainer\":\"VirtualServersPage_countryHeaderContainer__cRL91\",\"countryBlackEl\":\"VirtualServersPage_countryBlackEl__UGwq7\",\"countryContainer\":\"VirtualServersPage_countryContainer__vf5Ov\",\"countryParamsRow\":\"VirtualServersPage_countryParamsRow__G2g5l\",\"countryParamsHeader\":\"VirtualServersPage_countryParamsHeader__28UHJ\",\"countryParamsText\":\"VirtualServersPage_countryParamsText__vNyHr\",\"countryBuyBtn\":\"VirtualServersPage_countryBuyBtn__abKb7\",\"card\":\"VirtualServersPage_card__9hGd-\",\"pros2CardStructure\":\"VirtualServersPage_pros2CardStructure__apMjD\",\"cardHeader\":\"VirtualServersPage_cardHeader__zTClt\",\"cardDescr\":\"VirtualServersPage_cardDescr__IwU16\",\"prosSmallGif\":\"VirtualServersPage_prosSmallGif__9uLCr\",\"minorBanner\":\"VirtualServersPage_minorBanner__Vi1Pu\",\"btnText\":\"VirtualServersPage_btnText__sWeRZ\",\"minorBannerLeft\":\"VirtualServersPage_minorBannerLeft__b0t6P\",\"minorBannerRight\":\"VirtualServersPage_minorBannerRight__1kzNG\",\"minorBtn\":\"VirtualServersPage_minorBtn__mx4wd\",\"countrySwitch\":\"VirtualServersPage_countrySwitch__gORBg\",\"switchHalf\":\"VirtualServersPage_switchHalf__2Tgu9\",\"selected\":\"VirtualServersPage_selected__No4Zv\",\"OSHeader\":\"VirtualServersPage_OSHeader__PYZZn\",\"OSText\":\"VirtualServersPage_OSText__PkkPk\",\"OSPanel\":\"VirtualServersPage_OSPanel__7u6Un\",\"OSHeaderWrapper\":\"VirtualServersPage_OSHeaderWrapper__klJLk\",\"OSList\":\"VirtualServersPage_OSList__HGflZ\",\"OSListItem\":\"VirtualServersPage_OSListItem__M0WTL\"};","import { Container, Row, Col } from \"react-bootstrap\";\r\nimport styles from \"./VirtualServersPage.module.css\";\r\nimport { LowerMainBannerHeader, UpperMainBannerHeader } from \"./DataCenterSvg\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useLang } from \"../LangContext\";\r\nimport { useTheme } from \"../ThemeContext\";\r\nimport MinorHeader from \"./MinorHeader\";\r\nimport { motion } from \"framer-motion\";\r\nimport { s } from \"framer-motion/client\";\r\n\r\nfunction MainBanner({ isLg, isXl }) {\r\n  const { s, toggleTheme } = useTheme();\r\n  const { lang, changeLang, t } = useLang();\r\n\r\n  return (\r\n    <div className={styles.mainBannerContainer} style={s.VSMainBanner}>\r\n      <Row>\r\n        <Col xs={12} md={7}>\r\n          <div className={`${styles.mainBannerTextBlock} h-100`}>\r\n            <h4 style={{ color: s.DCProsHeader, letterSpacing: \"1.5px\" }}>\r\n              {t(\"VSMainBannerHeader\")}\r\n            </h4>\r\n            <p style={{ color: s.DCProsText }}>\r\n              {t(\"VSMainBannerText1\")}\r\n              {(isLg || isXl) && <br />}\r\n              {t(\"VSMainBannerText2\")}\r\n              {(isLg || isXl) && <br />} {t(\"VSMainBannerText3\")}\r\n            </p>\r\n          </div>\r\n        </Col>\r\n        <Col xs={12} md={5}>\r\n          <div className=\"d-flex h-100 justify-content-center align-items-center\">\r\n            <svg\r\n              width=\"285\"\r\n              height=\"200\"\r\n              viewBox=\"0 0 285 200\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              {s.VSMainBannerIcon}\r\n\r\n              <motion.path\r\n                d=\"M263.632 129.74C260.777 119.51 251.332 112 240.116 112C226.64 112 215.717 122.842 215.717 136.215C215.717 137.095 215.765 137.965 215.858 138.82C206.772 140.911 200 148.994 200 158.648C200 169.576 208.678 178.49 219.567 178.978H219.596C219.898 178.992 220.202 179 220.507 179C220.813 179 221.133 178.991 221.444 178.978L257.534 178.959C258.008 178.985 258.484 179 258.965 179C272.792 179 284 167.876 284 154.153C284 142.014 275.228 131.91 263.632 129.74Z\"\r\n                fill=\"#E5EEF7\"\r\n                stroke=\"#23C1FF\"\r\n                strokeWidth=\"1.8\"\r\n                animate={{\r\n                  y: [\r\n                    0, // старт\r\n                    20, // резкий подъём\r\n                    16, // первый «отскок» вниз (+12px от пика)\r\n                    20, // второй «отскок» вверх (–12px от пика)\r\n                    20, // возврат к пику\r\n                    0, // плавный спуск в базу\r\n                    4, // первый «отскок» вниз (+12px от базы)\r\n                    -2, // второй «отскок» вверх (–12px от базы)\r\n                    0, // возврат в базу\r\n                  ],\r\n                }}\r\n                transition={{\r\n                  duration: 1.5,\r\n                  ease: \"easeInOut\",\r\n                  times: [\r\n                    0, // 0%\r\n                    0.2, // подъём\r\n                    0.3, // первый отскок\r\n                    0.4, // второй отскок\r\n                    0.5, // возврат к пику\r\n                    0.7, // спуск\r\n                    0.8, // отскок у базы\r\n                    0.9, // второй отскок у базы\r\n                    1.0, // конец цикла\r\n                  ],\r\n                  repeat: Infinity,\r\n                  repeatDelay: 0.4,\r\n                }}\r\n              />\r\n            </svg>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CountryCard({\r\n  header,\r\n  price,\r\n  cpu,\r\n  vcpu,\r\n  ram,\r\n  size,\r\n  ddos,\r\n  gpu,\r\n  hint,\r\n  setHint,\r\n  index,\r\n  description,\r\n}) {\r\n  const { s, toggleTheme } = useTheme();\r\n  const { lang, changeLang, t } = useLang();\r\n  const [descriptionHint, setDescriptionHint] = useState(false);\r\n\r\n  const params = [\r\n    {\r\n      key: \"CPU\",\r\n      val: cpu,\r\n    },\r\n    {\r\n      key: t(\"vcpu\"),\r\n      val: vcpu,\r\n    },\r\n    {\r\n      key: t(\"ram\"),\r\n      val: ram,\r\n    },\r\n    {\r\n      key: t(\"size\"),\r\n      val: size,\r\n    },\r\n    {\r\n      key: t(\"ddos\"),\r\n      val: ddos,\r\n    },\r\n    {\r\n      key: t(\"gpu\"),\r\n      val: gpu,\r\n    },\r\n  ];\r\n  return (\r\n    <div\r\n      className={styles.countryCard}\r\n      style={{ ...s.DCProsCard, height: \"auto\" }}\r\n    >\r\n      <div\r\n        className={styles.countryHeaderContainer}\r\n        style={s.VSCountryCardHeaderContainer}\r\n      >\r\n        <div\r\n          className={styles.countryBlackEl}\r\n          style={{ backgroundColor: s.DCProsHeader }}\r\n        >\r\n          <h4\r\n            style={{\r\n              fontSize: \"17px\",\r\n              margin: \"0\",\r\n              color: s.guideCard2Bg,\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              gap: \"6px\",\r\n            }}\r\n          >\r\n            {header}\r\n            {description && (\r\n              <div style={{ position: \"relative\" }}>\r\n                <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                  <svg\r\n                    width=\"18\"\r\n                    height=\"18\"\r\n                    viewBox=\"0 0 18 18\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    onMouseEnter={() => setDescriptionHint(true)}\r\n                    onMouseLeave={() => setDescriptionHint(false)}\r\n                  >\r\n                    <path\r\n                      d=\"M9.0013 17.3337C4.39893 17.3337 0.667969 13.6027 0.667969 9.00033C0.667969 4.39795 4.39893 0.666992 9.0013 0.666992C13.6036 0.666992 17.3346 4.39795 17.3346 9.00033C17.3346 13.6027 13.6036 17.3337 9.0013 17.3337ZM9.0013 15.667C12.6832 15.667 15.668 12.6822 15.668 9.00033C15.668 5.31843 12.6832 2.33366 9.0013 2.33366C5.3194 2.33366 2.33464 5.31843 2.33464 9.00033C2.33464 12.6822 5.3194 15.667 9.0013 15.667ZM8.16797 4.83366H9.83463V6.50033H8.16797V4.83366ZM8.16797 8.16699H9.83463V13.167H8.16797V8.16699Z\"\r\n                      fill=\"#222525\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n                {descriptionHint && (\r\n                  <div\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      top: \"calc(100% + 10px)\", // Позиция ниже иконки\r\n                      left: \"50%\",\r\n                      transform: \"translateX(-50%)\", // Центрируем по горизонтали\r\n                      borderRadius: \"4px\",\r\n                      border: \"1px solid #222525\",\r\n                      padding: \"0 7px\",\r\n                      background: \"#FFF\",\r\n                      color: \"black\", // Белый текст\r\n                      borderRadius: \"4px\", // Скругленные углы\r\n                      height: \"26px\",\r\n                      fontSize: \"14px\", // Размер текста\r\n                      fontFamily: \"Gilroy-medium\", // Шрифт, как в вашем проекте\r\n                      whiteSpace: \"nowrap\", // Текст в одну строку\r\n                      zIndex: 100, // Поверх остальных элементов\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    {description} {/* Текст tooltip из данных */}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </h4>\r\n        </div>\r\n        <p style={{ color: s.DCProsHeader }}>{price}</p>\r\n      </div>\r\n      <div\r\n        // className={styles.countryParams}\r\n        className=\"mt-3\"\r\n      >\r\n        {params.map(\r\n          (el) =>\r\n            el.val && (\r\n              <div className={styles.countryParamsRow} key={el.key}>\r\n                <p\r\n                  className={styles.countryParamsHeader}\r\n                  style={{ color: s.VSCountryCardVal }}\r\n                >\r\n                  {el.key}\r\n                </p>\r\n                <hr style={{ backgroundColor: s.VSHrBg }} />\r\n                {el.key.length + el.val.length <= 35 ? (\r\n                  <p\r\n                    className={styles.countryParamsText}\r\n                    style={{ color: s.cardBlinkColor }}\r\n                  >\r\n                    {el.val}\r\n                  </p>\r\n                ) : (\r\n                  <div style={{ position: \"relative\" }}>\r\n                    <svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      width=\"18\"\r\n                      height=\"18\"\r\n                      viewBox=\"0 0 18 18\"\r\n                      fill=\"none\"\r\n                      style={{ marginBottom: \"1px\" }}\r\n                      onMouseEnter={() => setHint([index, el.key])}\r\n                      onMouseLeave={() => setHint([])}\r\n                    >\r\n                      <path\r\n                        d=\"M9.0013 17.3337C4.39893 17.3337 0.667969 13.6027 0.667969 9.00033C0.667969 4.39795 4.39893 0.666992 9.0013 0.666992C13.6036 0.666992 17.3346 4.39795 17.3346 9.00033C17.3346 13.6027 13.6036 17.3337 9.0013 17.3337ZM9.0013 15.667C12.6832 15.667 15.668 12.6822 15.668 9.00033C15.668 5.31843 12.6832 2.33366 9.0013 2.33366C5.3194 2.33366 2.33464 5.31843 2.33464 9.00033C2.33464 12.6822 5.3194 15.667 9.0013 15.667ZM8.16797 4.83366H9.83463V6.50033H8.16797V4.83366ZM8.16797 8.16699H9.83463V13.167H8.16797V8.16699Z\"\r\n                        fill=\"#A8A8A8\"\r\n                      />\r\n                    </svg>\r\n                    {hint && hint[0] === index && hint[1] === el.key && (\r\n                      <div\r\n                        style={{\r\n                          position: \"absolute\",\r\n                          top: \"calc(100% + 5px)\", // Позиция ниже иконки\r\n                          left: \"50%\",\r\n                          transform: \"translateX(-50%)\", // Центрируем по горизонтали\r\n                          borderRadius: \"4px\",\r\n                          border: \"1px solid #222525\",\r\n                          padding: \"0 7px\",\r\n                          background: \"#FFF\",\r\n                          color: \"black\", // Белый текст\r\n                          borderRadius: \"4px\", // Скругленные углы\r\n                          height: \"26px\",\r\n                          fontSize: \"14px\", // Размер текста\r\n                          fontFamily: \"Gilroy-medium\", // Шрифт, как в вашем проекте\r\n                          whiteSpace: \"nowrap\", // Текст в одну строку\r\n                          zIndex: 100, // Поверх остальных элементов\r\n                          display: \"flex\",\r\n                          alignItems: \"center\",\r\n                        }}\r\n                      >\r\n                        {el.val} {/* Текст tooltip из данных */}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )\r\n        )}\r\n      </div>\r\n      <a href=\"https://my.qwins.co\" style={{ textDecoration: \"none\" }}>\r\n        <button\r\n          // className={`${styles.countryBuyBtn} mt-4`}\r\n          // className={`mt-1 ${styles.minorBtn}`}\r\n          className={`${styles.countryBuyBtn} mt-4`}\r\n          style={{\r\n            color: s.guideCard2Bg,\r\n            ...s.VSMainBannerBtnHover,\r\n          }}\r\n        >\r\n          {t(\"VSBuyBtnText\")}\r\n        </button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction CountryCards({ curCountry }) {\r\n  const { lang, changeLang, t } = useLang();\r\n\r\n  const cards = {\r\n    ger: [...t(\"VPGer\")],\r\n    fin: [...t(\"VPFin\")],\r\n    net: [...t(\"VPNet\")],\r\n    est: [...t(\"VPEst\")],\r\n  };\r\n  return (\r\n    <motion.div\r\n      className=\"mt-5\"\r\n      key={curCountry}\r\n      initial={{ opacity: 0 }} // Начальное состояние\r\n      animate={{ opacity: 1 }} // Конечное состояние\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <Row xs={1} md={2} xxl={4} className=\"gy-4\">\r\n        {cards[curCountry].map((el, index) => {\r\n          return (\r\n            <Col>\r\n              <CountryCard {...el} key={index} />\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nfunction Pros2Card({ header, description, picSrc, children }) {\r\n  const { s, toggleTheme } = useTheme();\r\n\r\n  const descriptionClass = `${styles.cardDescr}`;\r\n  const headerClass = `${styles.cardHeader} m-0`;\r\n  const divClass = `${styles.card} h-100 ${styles.pros2CardStructure}`;\r\n  return (\r\n    <Col>\r\n      <div\r\n        className={divClass}\r\n        style={s.cardBg}\r\n        //   style={{ paddingBottom: \"7px\" }}\r\n      >\r\n        <Row>\r\n          <Col xs={12}>\r\n            <div className=\"d-flex align-items-center gap-3\">\r\n              <div>\r\n                <div className=\"panel-container\" style={s.card2IconBG}>\r\n                  {children}\r\n                </div>\r\n              </div>\r\n              {/* <img src={picSrc} alt=\"IMG\" className={styles.prosSmallGif} /> */}\r\n              <h4\r\n                className={headerClass}\r\n                style={{ fontSize: \"22px\", ...s.cardHeader }}\r\n              >\r\n                {header}\r\n              </h4>\r\n            </div>\r\n          </Col>\r\n          <Col xs={12}>\r\n            <p\r\n              className={descriptionClass}\r\n              style={{ marginTop: \"28px\", ...s.card2Descr }}\r\n              // style={{ maxWidth: \"82%\" }}\r\n            >\r\n              {description}\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nfunction ProsModule2({ isXl }) {\r\n  const { s, toggleTheme } = useTheme();\r\n  const { lang, changeLang, t } = useLang();\r\n  const prosCards = [\r\n    {\r\n      header: t(\"VSProsHeader2\"),\r\n      text: t(\"VSProsText2\"),\r\n      pic: (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"20\"\r\n          height=\"20\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M1.01483 14.9992C0.56636 14.2506 0.229748 13.4694 0 12.6734C1.00896 12.1773 1.69986 11.1664 1.69986 9.99999C1.69986 8.83448 1.00999 7.82415 0.00228242 7.32765C0.465763 5.71702 1.34591 4.21703 2.59733 2.99097C3.54766 3.58502 4.80166 3.65619 5.84993 3.07295C6.89821 2.48971 7.46125 1.40758 7.40256 0.31745C9.13013 -0.113918 10.9182 -0.0984802 12.5973 0.32003C12.5396 1.40929 13.1026 2.49017 14.1501 3.07295C15.1984 3.65617 16.4523 3.58502 17.4026 2.99103C18.003 3.58072 18.5367 4.25226 18.9852 5.00084C19.4336 5.7494 19.7703 6.53062 20 7.32652C18.991 7.82262 18.3001 8.83358 18.3001 9.99999C18.3001 11.1656 18.99 12.1758 19.9977 12.6723C19.5343 14.283 18.6541 15.7829 17.4027 17.009C16.4523 16.415 15.1984 16.3438 14.1501 16.927C13.1017 17.5102 12.5388 18.5924 12.5974 19.6826C10.8699 20.1139 9.08189 20.0985 7.40269 19.68C7.46036 18.5907 6.89738 17.5098 5.84993 16.927C4.80169 16.3438 3.54775 16.4149 2.59744 17.0089C1.99706 16.4192 1.46331 15.7477 1.01483 14.9992ZM6.88745 15.1953C8.01978 15.8253 8.83298 16.8213 9.22247 17.9644C9.73946 18.0117 10.2599 18.0124 10.777 17.966C11.1663 16.8223 11.9797 15.8256 13.1125 15.1953C14.2454 14.5649 15.5479 14.3846 16.7703 14.6314C17.0706 14.2231 17.3302 13.7884 17.5461 13.3332C16.7137 12.4367 16.2251 11.26 16.2251 9.99999C16.2251 8.74 16.7137 7.5634 17.5461 6.66685C17.4381 6.44089 17.3187 6.21864 17.1881 6.00067C17.0575 5.78268 16.9174 5.57201 16.7683 5.36898C15.5466 5.61528 14.2449 5.43469 13.1125 4.80471C11.9802 4.17471 11.1671 3.17861 10.7775 2.03567C10.2606 1.98827 9.74009 1.98759 9.22309 2.03404C8.83371 3.17764 8.0203 4.1744 6.88745 4.80471C5.75456 5.43502 4.45212 5.61546 3.22974 5.36859C2.92945 5.77691 2.66985 6.21159 2.45397 6.66672C3.28632 7.56331 3.7749 8.74 3.7749 9.99999C3.7749 11.26 3.28634 12.4366 2.45397 13.3331C2.56199 13.5591 2.68127 13.7814 2.81187 13.9993C2.94246 14.2173 3.08254 14.4279 3.23165 14.631C4.45349 14.3848 5.75517 14.5653 6.88745 15.1953ZM9.99998 12.9995C8.28102 12.9995 6.88745 11.6566 6.88745 9.99999C6.88745 8.34347 8.28102 7.0005 9.99998 7.0005C11.719 7.0005 13.1125 8.34347 13.1125 9.99999C13.1125 11.6566 11.719 12.9995 9.99998 12.9995ZM9.99998 10.9998C10.573 10.9998 11.0375 10.5522 11.0375 9.99999C11.0375 9.44778 10.573 9.00016 9.99998 9.00016C9.42696 9.00016 8.96247 9.44778 8.96247 9.99999C8.96247 10.5522 9.42696 10.9998 9.99998 10.9998Z\"\r\n            fill={s.cardBlinkColor}\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      header: t(\"VSProsHeader3\"),\r\n      text: t(\"VSProsText3\"),\r\n      pic: (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"17\"\r\n          height=\"20\"\r\n          viewBox=\"0 0 17 20\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M7.39243 12.093V13.9535C4.33038 13.9535 1.84811 16.4524 1.84811 19.5349H0C0 15.4248 3.3097 12.093 7.39243 12.093ZM7.39243 11.1628C4.32919 11.1628 1.84811 8.66512 1.84811 5.5814C1.84811 2.49767 4.32919 0 7.39243 0C10.4557 0 12.9368 2.49767 12.9368 5.5814C12.9368 8.66512 10.4557 11.1628 7.39243 11.1628ZM7.39243 9.30233C9.43459 9.30233 11.0886 7.63721 11.0886 5.5814C11.0886 3.52558 9.43459 1.86047 7.39243 1.86047C5.35027 1.86047 3.69621 3.52558 3.69621 5.5814C3.69621 7.63721 5.35027 9.30233 7.39243 9.30233ZM9.78998 16.5688C9.73278 16.3266 9.70256 16.0739 9.70256 15.814C9.70256 15.5541 9.73278 15.3014 9.78989 15.0592L8.87359 14.5266L9.79765 12.9153L10.7146 13.4483C11.0778 13.1024 11.5207 12.8404 12.0127 12.6929V11.6279H13.8608V12.6929C14.3528 12.8404 14.7956 13.1024 15.1588 13.4483L16.0759 12.9153L17 14.5265L16.0836 15.0591C16.1407 15.3014 16.1709 15.5541 16.1709 15.814C16.1709 16.0738 16.1407 16.3265 16.0836 16.5687L17 17.1013L16.0759 18.7126L15.1589 18.1795C14.7957 18.5255 14.3529 18.7875 13.8609 18.9349V20H12.0128V18.935C11.5208 18.7876 11.0779 18.5256 10.7147 18.1796L9.79774 18.7127L8.87359 17.1014L9.78998 16.5688ZM12.9368 17.2093C13.7022 17.2093 14.3228 16.5846 14.3228 15.814C14.3228 15.0433 13.7022 14.4186 12.9368 14.4186C12.1713 14.4186 11.5507 15.0433 11.5507 15.814C11.5507 16.5846 12.1713 17.2093 12.9368 17.2093Z\"\r\n            fill={s.cardBlinkColor}\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n\r\n    {\r\n      header: t(\"VSProsHeader6\"),\r\n      text: (\r\n        <>\r\n          {t(\"VSProsText6_1\")}\r\n          {isXl && <br />}\r\n          {t(\"VSProsText6_2\")}\r\n        </>\r\n      ),\r\n      pic: (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"20\"\r\n          height=\"20\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M2.22222 8.9381C6.24302 8.4869 9.42989 5.61872 9.93122 2H2.22222V8.9381ZM2.22222 10.9506V18H17.7778V2H12.1673C11.6462 6.72442 7.47158 10.4816 2.22222 10.9506ZM1.11111 0H18.8889C19.5026 0 20 0.44772 20 1V19C20 19.5523 19.5026 20 18.8889 20H1.11111C0.497467 20 0 19.5523 0 19V1C0 0.44772 0.497467 0 1.11111 0ZM13.3333 14H15.5556V16H13.3333V14Z\"\r\n            fill={s.cardBlinkColor}\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      header: t(\"VSProsHeader4\"),\r\n      text: t(\"VSProsText4\"),\r\n      pic: (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"18\"\r\n          height=\"20\"\r\n          viewBox=\"0 0 18 20\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M12 2H2V18H16V6H12V2ZM0 0.9918C0 0.44405 0.44749 0 0.9985 0H13L17.9997 5L18 18.9925C18 19.5489 17.5551 20 17.0066 20H0.9934C0.44476 20 0 19.5447 0 19.0082V0.9918ZM9 9V6L13 10L9 14V11H5V9H9Z\"\r\n            fill={s.cardBlinkColor}\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      header: t(\"VSProsHeader8\"),\r\n      text: t(\"VSProsText8\"),\r\n      pic: (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          viewBox=\"0 0 36 36\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M27 9.5C27.5523 9.5 28 9.92285 28 10.4444V25.5556C28 26.0772 27.5523 26.5 27 26.5H9C8.44772 26.5 8 26.0772 8 25.5556V10.4444C8 9.92285 8.44772 9.5 9 9.5H27ZM26 17.0556H10V24.6111H26V17.0556ZM26 11.3889H10V15.1667H26V11.3889ZM17 12.3333V14.2222H15V12.3333H17ZM13 12.3333V14.2222H11V12.3333H13Z\"\r\n            fill={s.cardBlinkColor}\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n    {\r\n      header: t(\"VSProsHeader9\"),\r\n      text: t(\"VSProsText9\"),\r\n      pic: (\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"36\"\r\n          height=\"36\"\r\n          viewBox=\"0 0 36 36\"\r\n          fill=\"none\"\r\n        >\r\n          <path\r\n            d=\"M24.2419 11.4413L25.8568 9.84946L27.4281 11.3984L25.8132 12.9901C27.1817 14.6765 28 16.8155 28 19.1429C28 24.5868 23.5229 29 18 29C12.4772 29 8 24.5868 8 19.1429C8 13.6989 12.4772 9.28571 18 9.28571C20.3611 9.28571 22.5311 10.0923 24.2419 11.4413ZM18 26.8095C22.2956 26.8095 25.7778 23.377 25.7778 19.1429C25.7778 14.9087 22.2956 11.4762 18 11.4762C13.7045 11.4762 10.2222 14.9087 10.2222 19.1429C10.2222 23.377 13.7045 26.8095 18 26.8095ZM16.8889 13.6667H19.1111V20.2381H16.8889V13.6667ZM13.5556 6H22.4444V8.19048H13.5556V6Z\"\r\n            fill={s.cardBlinkColor}\r\n          />\r\n        </svg>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <Row xs={1} lg={3} className=\"g-4 mt-2 mt-lg-4 align-items-stretch\">\r\n      {prosCards.map((el) => (\r\n        <Pros2Card header={el.header} description={el.text}>\r\n          {el.pic}\r\n        </Pros2Card>\r\n      ))}\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction MinorBanner({ isLg, isXl }) {\r\n  const { lang, changeLang, t } = useLang();\r\n\r\n  const { s, toggleTheme } = useTheme();\r\n  return (\r\n    <div className={`${styles.minorBanner} mt-5 mb-4`} style={s.DCProsCard}>\r\n      {isXl && (\r\n        <>\r\n          {/* <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"551\"\r\n            height=\"174\"\r\n            viewBox=\"0 0 551 174\"\r\n            fill=\"none\"\r\n            className={styles.minorBannerLeft}\r\n          >\r\n            {s.DCMinorLeft}\r\n          </svg> */}\r\n          <svg\r\n            width=\"821\"\r\n            height=\"220\"\r\n            viewBox=\"0 0 821 220\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={styles.minorBannerLeft}\r\n          >\r\n            {s.VSMinorBannerLeft}\r\n          </svg>\r\n\r\n          <svg\r\n            width=\"821\"\r\n            height=\"220\"\r\n            viewBox=\"0 0 821 220\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={styles.minorBannerRight}\r\n          >\r\n            {s.VSMinorBannerRight}\r\n          </svg>\r\n        </>\r\n      )}\r\n      <h4 style={{ color: s.DCProsHeader, letterSpacing: \"1.5px\" }}>\r\n        {t(\"VSMinorBannerHeader\")}\r\n      </h4>\r\n      <p className=\"mt-4\" style={{ color: s.DCProsText, margin: 0 }}>\r\n        {t(\"VSMinorBannerHeaderText_1\")}\r\n        {(isLg || isXl) && <br />}\r\n        {t(\"VSMinorBannerHeaderText_2\")}\r\n        {(isLg || isXl) && <br />}\r\n        {t(\"VSMinorBannerHeaderText_3\")}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction OSBlock({ isXs, isSm, isMd, isXl }) {\r\n  const [openedList, setOpenedList] = useState(null);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const { s, toggleTheme } = useTheme();\r\n  const { lang, changeLang, t } = useLang();\r\n  const [isTooltipVisible, setTooltipVisible] = useState(false);\r\n\r\n  const OSItems = [\r\n    {\r\n      icon: (\r\n        <svg\r\n          width=\"29\"\r\n          height=\"28\"\r\n          viewBox=\"0 0 29 28\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M28.0625 14.25C28.0625 21.6157 21.9933 27.5938 14.5 27.5938C7.00672 27.5938 0.9375 21.6157 0.9375 14.25C0.9375 6.87758 7.00672 0.90625 14.5 0.90625C21.9933 0.90625 28.0625 6.87758 28.0625 14.25Z\"\r\n            fill=\"#D70751\"\r\n          />\r\n          <path\r\n            d=\"M20.3829 12.8194C20.4004 13.3211 20.2512 13.5948 20.1196 14.0509C19.6807 14.1877 19.7685 14.6895 19.7246 14.8263C19.4613 14.9631 18.1885 16.3771 18.6274 15.6017C18.1885 15.921 18.2763 16.0578 17.5741 16.2858L17.5566 16.2402C15.845 17.0612 13.4312 15.4192 13.4312 13.1387C13.4136 13.2755 13.3873 13.2299 13.3434 13.2755C13.2995 10.7213 16.1522 9.26177 17.8199 10.8125C16.7227 9.48983 14.3967 9.39861 13.6067 10.995C13.1679 11.2687 13.0801 12.1809 12.9045 12.3177C12.6851 16.3315 16.1961 18.9313 19.4876 15.8753C19.8387 15.6017 20.1898 15.1456 20.3214 15.1C20.1898 15.3599 20.3478 15.1912 20.2337 15.4192C20.497 14.9631 20.2776 14.0053 20.7603 14.6803C20.7954 13.8137 21.7258 12.0349 21.2431 13.6313C21.3747 13.084 21.287 11.9893 21.5064 12.9927C21.3747 12.4454 21.6381 12.0349 21.7258 11.7156C21.4625 11.0315 20.9359 9.75437 21.5503 10.6666C20.2776 7.92994 21.5942 9.07021 22.0769 10.8946C22.033 10.4016 21.8619 9.92769 21.7258 9.48071C21.8136 9.52632 21.5503 8.47727 21.8575 9.20704C21.4625 7.70188 20.1898 6.37917 19.0048 5.64939C19.7948 6.47039 16.7227 4.96523 15.9766 4.69157C16.5033 5.01084 13.2995 5.01084 15.0769 4.72805C14.4625 4.68244 13.6726 4.9105 14.4186 4.5C13.9447 4.52737 13.3215 4.77367 13.497 4.54561C12.5754 5.04733 9.76662 7.0086 10.5566 5.95955C9.54719 6.91738 8.93277 7.60154 8.40613 8.87864C4.93905 13.9414 8.31835 21.5585 13.8042 23.7022C14.287 23.8846 15.0769 23.8846 15.7353 23.8846C14.9892 23.6566 14.8575 23.7934 14.1114 23.5197C13.5848 23.2917 13.4531 22.9724 13.0581 22.6075C13.0274 22.9724 12.0049 22.5847 12.356 22.1514C12.1365 22.1332 11.7415 21.7409 11.6099 21.5129C11.2149 21.6041 10.8638 20.8743 10.8638 20.6006C10.8199 20.7375 9.23998 19.0955 10.1616 19.5516C9.94217 19.3235 9.63496 19.2779 9.89828 19.0043C9.67885 18.3657 9.10832 18.092 9.76662 18.3201C8.80111 17.6359 8.23058 16.5413 8.66945 16.4957C8.45001 16.222 8.45001 15.9939 8.4939 15.6291C7.74782 13.9414 8.53779 11.8433 9.10832 10.4294C8.18669 10.5206 10.776 8.14887 11.4782 8.14887C11.3904 7.78398 11.961 7.32787 12.6632 7.09982C12.6193 7.05421 15.1208 5.91394 14.0675 6.73493C17.008 5.73149 20.2556 8.37692 20.4312 11.1136C20.6067 11.1592 20.4092 13.1661 20.3873 13.3029\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      ),\r\n\r\n      os: \"Debian\",\r\n      items: [\"Debian 9\", \"Debian 10\", \"Debian 11\", \"Debian 12\"],\r\n    },\r\n    {\r\n      icon: (\r\n        <svg\r\n          width=\"29\"\r\n          height=\"28\"\r\n          viewBox=\"0 0 29 28\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <rect\r\n            x=\"0.9375\"\r\n            y=\"0.90625\"\r\n            width=\"27.125\"\r\n            height=\"26.6875\"\r\n            rx=\"13.3438\"\r\n            fill=\"#048CFC\"\r\n          />\r\n          <path\r\n            d=\"M14.0764 7.75V13.8889H7.9375V7.75H14.0764ZM14.0764 20.75H7.9375V14.6111H14.0764V20.75ZM14.7986 7.75H20.9375V13.8889H14.7986V7.75ZM20.9375 14.6111V20.75H14.7986V14.6111H20.9375Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n        </svg>\r\n      ),\r\n      os: \"Windows\",\r\n      items: [\r\n        \"Windows Server 2022\",\r\n        \"Windows Server 2016\",\r\n        \"Windows Server 2019\",\r\n        \"Windows Server 2019 RUS\",\r\n        \"Windows Server 2022\",\r\n        \"Windows 10\",\r\n        \"Windows 11\",\r\n      ],\r\n      info: \"Тариф DE-1, FI-1, NL-1 и EE-1 не поддерживает установку операционной системы Windows\",\r\n    },\r\n    {\r\n      icon: (\r\n        <svg\r\n          width=\"29\"\r\n          height=\"28\"\r\n          viewBox=\"0 0 29 28\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M28.0625 14.25C28.0625 21.6157 21.9933 27.5938 14.5 27.5938C7.00672 27.5938 0.9375 21.6157 0.9375 14.25C0.9375 6.87758 7.00672 0.90625 14.5 0.90625C21.9933 0.90625 28.0625 6.87758 28.0625 14.25Z\"\r\n            fill=\"#222525\"\r\n          />\r\n          <path\r\n            d=\"M22.472 15.7304C23.2835 15.665 23.9383 16.2104 23.9953 17.0323C24.0594 17.8905 23.4686 18.5888 22.6571 18.6542C21.8813 18.7197 21.1908 18.116 21.1339 17.316C21.0698 16.4577 21.6321 15.8177 22.472 15.7231V15.7304Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M12.6348 22.5017C12.6348 21.6726 13.254 21.0398 14.0014 21.0398C14.7488 21.0398 15.4677 21.738 15.4677 22.5381C15.4677 23.3017 14.8485 23.9709 14.1295 24C13.2256 24 12.6348 23.4254 12.6348 22.5017Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M14.8415 13.2139C14.7134 13.2794 14.6565 13.1848 14.6209 13.0903C13.4678 10.8938 13.8094 8.13 15.838 6.47899C16.3648 6.03532 17.3613 5.94077 17.7955 6.38444C17.9806 6.54445 18.0161 6.73355 18.0446 6.95902C18.1087 7.43904 18.2012 7.9118 18.5144 8.29728C18.8561 8.71185 19.2903 8.87186 19.7885 8.83549C20.2227 8.83549 20.6569 8.77003 20.9416 9.27915C21.0982 9.56281 21.0342 10.6756 20.785 10.9011C20.664 10.9956 20.5644 10.9302 20.4718 10.9011C19.7529 10.6174 19.0055 10.6174 18.2653 10.7411C18.0161 10.7702 17.8951 10.712 17.8951 10.421C17.8667 9.94101 17.7741 9.49735 17.525 9.08278C17.0552 8.22455 16.1868 8.19545 15.6245 8.98823C15.1547 9.62099 15.0337 10.3847 14.9056 11.1484C14.7846 11.8175 14.8131 12.5157 14.8415 13.2139Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M15.6248 13.694C15.5607 13.5994 15.5963 13.5049 15.6888 13.4394C17.4612 11.7884 20.1091 11.4684 22.159 13.0903C22.6858 13.534 23.0274 14.4577 22.7498 14.9959C22.6288 15.2214 22.4722 15.3159 22.2801 15.3741C21.8459 15.5632 21.4401 15.7523 21.1625 16.1669C20.8849 16.5814 20.8209 17.0542 20.9419 17.5633C21.0344 17.9779 21.191 18.4215 20.7853 18.807C20.5646 19.0325 19.5112 19.2216 19.2264 19.0325C19.1054 18.9379 19.1339 18.8434 19.1624 18.7125C19.2549 17.9197 19.0699 17.1851 18.7923 16.4869C18.6997 16.2323 18.7282 16.1087 18.9773 16.0432C19.4115 15.9123 19.8172 15.6941 20.1304 15.3741C20.8138 14.705 20.6572 13.8467 19.7603 13.4685C19.0414 13.1485 18.294 13.214 17.5822 13.2794C16.8989 13.3085 16.244 13.5049 15.6248 13.694Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M15.2186 14.5231C15.3111 14.4286 15.3752 14.4577 15.4677 14.5231C17.5248 15.7959 18.5783 18.3052 17.6458 20.7562C17.3967 21.389 16.5852 22.029 15.9944 21.869C15.7453 21.8036 15.6243 21.6799 15.4962 21.5199C15.2186 21.1417 14.9054 20.7853 14.4356 20.6326C13.9374 20.4726 13.5032 20.5671 13.069 20.8217C12.6988 21.0472 12.3216 21.3308 11.8518 21.0472C11.5742 20.8872 11.1044 19.9053 11.1969 19.5853C11.261 19.4616 11.382 19.4616 11.5101 19.4616C12.286 19.338 12.9124 18.9525 13.5032 18.4434C13.6882 18.2834 13.8448 18.2834 14.0014 18.5088C14.2505 18.887 14.5637 19.2071 14.9695 19.4325C15.7809 19.9126 16.5568 19.498 16.6493 18.5452C16.7418 17.7524 16.4642 17.0469 16.2151 16.3487C15.9375 15.7159 15.5958 15.105 15.2186 14.5377V14.5231Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M14.222 14.7122C14.101 15.3449 13.8163 15.9559 13.4462 16.4941C12.3287 18.2106 10.7058 18.9088 8.71274 18.7197C7.99383 18.6542 7.40304 18.0506 7.34609 17.4469C7.31762 17.1923 7.37456 17.0032 7.53116 16.8141C7.75182 16.5305 7.93688 16.2759 8.02942 15.9268C8.21448 15.2286 7.96535 14.654 7.4671 14.1449C6.78377 13.4466 6.87631 12.8066 7.68775 12.2975C7.78029 12.232 7.90841 12.1738 8.02942 12.1084C8.21448 12.0138 8.37108 12.0138 8.43514 12.232C8.71274 12.9666 9.27506 13.5048 9.90144 13.9485C10.1221 14.1376 10.1221 14.2685 9.92991 14.4867C9.55978 14.9013 9.33912 15.4104 9.31065 15.985C9.24659 16.6832 9.65231 17.1269 10.3356 17.1269C10.7698 17.1269 11.1756 16.9669 11.5528 16.7778C12.5209 16.2686 13.2611 15.534 13.98 14.7776C14.0726 14.7485 14.101 14.6831 14.2292 14.7122H14.222Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M9.11869 8.0354C9.18275 8.0354 9.33935 8.06449 9.48882 8.10086C10.6419 8.32633 11.3537 7.91176 11.731 6.79896C11.9801 6.06437 12.5068 5.84618 13.1973 6.22438C13.2258 6.22438 13.2258 6.25348 13.2613 6.25348C13.9803 6.66805 13.9803 6.7335 13.5389 7.36627C13.1688 7.87539 12.9766 8.44997 12.8841 9.05364C12.82 9.40275 12.699 9.46821 12.3858 9.3373C11.8876 9.14819 11.3608 9.14819 10.827 9.3373C10.2362 9.5264 9.98708 10.0719 10.1721 10.6756C10.4213 11.4683 11.1046 11.8174 11.6954 12.232C12.2862 12.6466 12.9695 12.8648 13.6244 13.1557C13.7169 13.1848 13.8735 13.1848 13.845 13.3448C13.8165 13.4394 13.6884 13.4394 13.5674 13.4394C12.1652 13.5048 10.827 13.2793 9.73795 12.3266C8.71296 11.4683 7.96558 10.421 8.08658 8.95182C8.17912 8.47179 8.52078 8.12268 9.11157 8.02813L9.11869 8.0354Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M6.56335 16.9669C5.81597 17.0615 5.06858 16.4287 5.00452 15.6287C4.94046 14.865 5.56684 14.1013 6.27864 14.0358C7.09008 13.9413 7.83747 14.5159 7.89441 15.2795C7.92289 16.0141 7.46022 16.9015 6.55624 16.9669H6.56335Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M19.6389 5.64985C20.4147 5.58439 21.1621 6.22443 21.2262 7.01721C21.2903 7.78089 20.6639 8.51548 19.9165 8.57366C19.105 8.63912 18.3932 8.03545 18.3292 7.2354C18.2651 6.44263 18.8274 5.70804 19.6389 5.64258V5.64985Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n          <path\r\n            d=\"M11.5104 6.2535C11.6029 7.08264 11.0406 7.78086 10.2007 7.9045C9.48177 7.99906 8.73439 7.39538 8.64185 6.69716C8.54932 5.77347 9.04758 5.10434 9.8875 5.00979C10.6634 4.91524 11.4107 5.51891 11.5033 6.2535H11.5104Z\"\r\n            fill=\"#F8F8F8\"\r\n          />\r\n        </svg>\r\n      ),\r\n      os: \"Alma Linux\",\r\n      items: [\"Alma Linux 8\", \"Alma Linux 9\"],\r\n    },\r\n    {\r\n      icon: (\r\n        <svg\r\n          width=\"31\"\r\n          height=\"31\"\r\n          viewBox=\"0 0 31 31\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            d=\"M29.0625 15.25C29.0625 22.6157 22.9933 28.5938 15.5 28.5938C8.00672 28.5938 1.9375 22.6157 1.9375 15.25C1.9375 7.87758 8.00672 1.90625 15.5 1.90625C22.9933 1.90625 29.0625 7.87758 29.0625 15.25Z\"\r\n            fill=\"#07D75E\"\r\n          />\r\n          <path\r\n            d=\"M17.943 7.92803L19.3553 9.34511L15.9453 12.7649V7.92803H17.943ZM10.6849 9.34511L14.095 12.7649V7.92803H12.0972L10.6849 9.34511ZM12.5397 7.48547H14.5374V13.203L15.0201 13.6857L15.5028 13.203V7.48547H17.5006L15.0201 5L12.5397 7.48547ZM13.7106 15L13.2279 14.5172H7.48045V12.5145L5 15L7.48045 17.4855V15.4828H13.2279L13.7106 15ZM17.2547 14.0747H22.0771V12.072L20.6648 10.6549L17.2547 14.0747ZM25 15L22.5196 12.5145V14.5172H16.8123L16.3296 15L16.8123 15.4828H22.5196V17.4855L25 15ZM7.9229 11.4461L9.37542 10.0291L13.4112 14.0747H14.095V13.3907L10.0592 9.34511L11.4715 7.92803H7.9229V11.4461ZM22.0771 7.92803H18.5687L19.981 9.34511L15.9453 13.3907V14.0747H16.6291L20.6648 10.0291L22.0771 11.4461V7.92803ZM14.095 22.072V17.2396L10.6849 20.6594L12.0972 22.0764H14.095V22.072ZM7.9229 14.0747H12.7855L9.37542 10.6549L7.9229 12.072V14.0747ZM22.0771 18.5539L20.6648 19.9709L16.6291 15.9253H15.9453V16.6093L19.981 20.6549L18.5687 22.072H22.0771V18.5539ZM22.0771 15.9253H17.2547L20.6648 19.3451L22.0771 17.928V15.9253ZM19.3553 20.6549L15.9453 17.2351V22.0675H17.943L19.3553 20.6549ZM9.37542 19.3451L12.7855 15.9253H7.9229V17.928L9.37542 19.3451ZM17.5006 22.5145H15.5028V16.797L15.0201 16.3143L14.5374 16.797V22.5145H12.5397L15.0201 25L17.5006 22.5145ZM10.0592 20.6549L14.095 16.6093V15.9253H13.4112L9.37542 19.9709L7.9229 18.5539V22.072H11.4715L10.0592 20.6549Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      ),\r\n      os: \"CentOS\",\r\n      items: [\"CentOS 7\", \"CentOS 8 Stream\", \"CentOS 9 Stream\"],\r\n    },\r\n    {\r\n      icon: (\r\n        <svg\r\n          width=\"29\"\r\n          height=\"28\"\r\n          viewBox=\"0 0 29 28\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <rect\r\n            x=\"0.9375\"\r\n            y=\"0.90625\"\r\n            width=\"27.125\"\r\n            height=\"26.6875\"\r\n            rx=\"13.3438\"\r\n            fill=\"#E95420\"\r\n          />\r\n          <path\r\n            d=\"M5.56149 12.4927C4.58335 12.4927 3.79688 13.284 3.79688 14.2533C3.79688 15.2227 4.58996 16.0139 5.56149 16.0139C6.53303 16.0139 7.32612 15.2227 7.32612 14.2533C7.32612 13.2773 6.53303 12.4927 5.56149 12.4927ZM18.165 20.4913C17.319 20.9793 17.0348 22.0541 17.5173 22.8981C18.0064 23.7422 19.0837 24.0323 19.9296 23.5443C20.7756 23.0564 21.0597 21.9816 20.5773 21.1375C20.0817 20.3001 19.0043 20.0099 18.165 20.4913ZM9.3948 14.2533C9.3948 12.5125 10.2606 10.976 11.5889 10.0463L10.3002 7.89003C8.75368 8.91869 7.61031 10.4947 7.12784 12.3344C7.68301 12.7894 8.03989 13.4818 8.03989 14.2533C8.03989 15.0248 7.68301 15.7171 7.12784 16.1722C7.60369 18.0119 8.75368 19.5879 10.3002 20.6166L11.5889 18.4603C10.2606 17.5306 9.3948 15.9941 9.3948 14.2533ZM14.5498 9.10989C17.2463 9.10989 19.4537 11.1673 19.6851 13.7983L22.2031 13.7588C22.0776 11.8201 21.2316 10.0792 19.923 8.80003C19.2488 9.0506 18.4756 9.01105 17.8081 8.62856C17.1339 8.23952 16.7176 7.59331 16.5986 6.88115C15.9443 6.70311 15.257 6.60419 14.5498 6.60419C13.3271 6.60419 12.1771 6.88774 11.1528 7.39548L12.382 9.58474C13.0363 9.28136 13.7766 9.10989 14.5498 9.10989ZM14.5498 19.3967C13.7766 19.3967 13.0363 19.2252 12.3754 18.9219L11.1462 21.1111C12.1706 21.6189 13.3271 21.9024 14.5432 21.9024C15.2504 21.9024 15.9377 21.8035 16.592 21.6255C16.7044 20.9199 17.1274 20.2671 17.8015 19.878C18.469 19.4889 19.2488 19.456 19.9164 19.7065C21.2184 18.4274 22.071 16.6865 22.1965 14.7478L19.6785 14.7083C19.4537 17.3327 17.2463 19.3967 14.5498 19.3967ZM18.1584 8.00873C19.0043 8.49669 20.0817 8.20655 20.5707 7.36251C21.0597 6.51848 20.769 5.44364 19.923 4.95568C19.0771 4.46772 17.9997 4.75786 17.5107 5.6019C17.0283 6.44593 17.319 7.52077 18.1584 8.00873Z\"\r\n            fill=\"white\"\r\n          />\r\n        </svg>\r\n      ),\r\n      os: \"Ubuntu\",\r\n      items: [\r\n        \"Ubuntu 16.04\",\r\n        \"Ubuntu 18.04\",\r\n        \"Ubuntu 20.04\",\r\n        \"Ubuntu 22.04\",\r\n        \"Ubuntu 24.04\",\r\n      ],\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setSelectedItems(Array(OSItems.length).fill(0));\r\n  }, [OSItems.length]);\r\n\r\n  useEffect(() => {\r\n    function handleClickOutside(event) {\r\n      // если в данный момент какой-то список открыт\r\n      // и при этом место клика **не** внутри любого .OSList\r\n      if (openedList !== null && !event.target.closest(`.${styles.OSList}`)) {\r\n        setOpenedList(null);\r\n      }\r\n    }\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [openedList]);\r\n\r\n  return (\r\n    <Row xs={1} lg={2} className=\"mt-5\">\r\n      <Col>\r\n        <div className=\"d-flex text-start flex-column\">\r\n          <h3\r\n            className={styles.OSHeader}\r\n            style={\r\n              isXs || isSm || isMd\r\n                ? {\r\n                    color: s.DCProsHeader,\r\n                    textAlign: \"center\",\r\n                    fontSize: \"clamp(25px, 5vw, 32px)\",\r\n                  }\r\n                : { color: s.DCProsHeader }\r\n            }\r\n          >\r\n            {t(\"OSHeader1\")} {isXl && <br />} {t(\"OSHeader2\")}\r\n          </h3>\r\n          <p\r\n            className={styles.OSText}\r\n            style={\r\n              isXs || isSm || isMd\r\n                ? { color: s.DCProsText, textAlign: \"center\", fontSize: \"18px\" }\r\n                : { color: s.DCProsText }\r\n            }\r\n            onClick={() => setOpenedList()}\r\n          >\r\n            {t(\"OSText\")}\r\n          </p>\r\n        </div>\r\n      </Col>\r\n      <Col>\r\n        <Row xs={2} sm={3} lg={3} className=\"g-3\">\r\n          {OSItems.map((el, index) => (\r\n            <Col key={index}>\r\n              <div className={styles.OSPanel} style={s.DCProsCard}>\r\n                <div className={styles.OSHeaderWrapper}>\r\n                  <div className=\"d-flex justify-content-center align-items-center\">\r\n                    {el.icon}\r\n                    <h6 className=\"ms-1 m-0\" style={{ color: s.DCProsHeader }}>\r\n                      {el.os}\r\n                    </h6>\r\n                    {el.info && (\r\n                      <>\r\n                        <div style={{ position: \"relative\" }}>\r\n                          <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"18\"\r\n                            height=\"18\"\r\n                            viewBox=\"0 0 18 18\"\r\n                            fill=\"none\"\r\n                            className=\"ms-1\"\r\n                            style={{ marginBottom: \"3px\" }}\r\n                            onMouseEnter={() => setTooltipVisible(true)}\r\n                            onMouseLeave={() => setTooltipVisible(false)}\r\n                          >\r\n                            <path\r\n                              d=\"M9.0013 17.3337C4.39893 17.3337 0.667969 13.6027 0.667969 9.00033C0.667969 4.39795 4.39893 0.666992 9.0013 0.666992C13.6036 0.666992 17.3346 4.39795 17.3346 9.00033C17.3346 13.6027 13.6036 17.3337 9.0013 17.3337ZM9.0013 15.667C12.6832 15.667 15.668 12.6822 15.668 9.00033C15.668 5.31843 12.6832 2.33366 9.0013 2.33366C5.3194 2.33366 2.33464 5.31843 2.33464 9.00033C2.33464 12.6822 5.3194 15.667 9.0013 15.667ZM8.16797 4.83366H9.83463V6.50033H8.16797V4.83366ZM8.16797 8.16699H9.83463V13.167H8.16797V8.16699Z\"\r\n                              fill=\"#A8A8A8\"\r\n                            />\r\n                          </svg>\r\n                          {isTooltipVisible && (\r\n                            <div\r\n                              style={{\r\n                                position: \"absolute\",\r\n                                top: \"calc(100% + 5px)\", // Позиция ниже иконки\r\n                                left: \"50%\",\r\n                                transform: \"translateX(-50%)\", // Центрируем по горизонтали\r\n                                borderRadius: \"4px\",\r\n                                border: \"1px solid #222525\",\r\n                                padding: \"0 7px\",\r\n                                background: \"#FFF\",\r\n                                color: \"black\", // Белый текст\r\n                                borderRadius: \"4px\", // Скругленные углы\r\n                                height: \"26px\",\r\n                                fontSize: \"14px\", // Размер текста\r\n                                fontFamily: \"Gilroy-medium\", // Шрифт, как в вашем проекте\r\n                                whiteSpace: \"nowrap\", // Текст в одну строку\r\n                                zIndex: 100, // Поверх остальных элементов\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                              }}\r\n                            >\r\n                              {el.info} {/* Текст tooltip из данных */}\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  className={styles.OSList}\r\n                  style={s.DCProsCard}\r\n                  onClick={() =>\r\n                    setOpenedList((prev) => (prev === index ? null : index))\r\n                  }\r\n                >\r\n                  <h6 style={{ margin: \"0\", color: s.DCProsHeader }}>\r\n                    {el.items[selectedItems[index]]}\r\n                  </h6>\r\n\r\n                  <svg\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: \"3px\",\r\n                      top: \"50%\",\r\n                      transform: \"translateY(-50%)\",\r\n                      width: \"16px\",\r\n                      height: \"16px\",\r\n                    }}\r\n                    viewBox=\"0 0 40 40\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                  >\r\n                    <polygon points=\"15,25 5,15 25,15\" fill={s.DCProsHeader} />\r\n                  </svg>\r\n                  {openedList === index && (\r\n                    <div\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: \"100%\", // сразу под нижней границей .OSList\r\n                        left: 0, // прижат по левому краю\r\n                        width: \"100%\", // растянуть на ширину родителя\r\n                        background: \"#fff\",\r\n                        border: \"1px solid #dee4e7\",\r\n                        borderRadius: \"6px\",\r\n                        zIndex: 10, // чтобы блок был поверх остальных элементов\r\n                        maxHeight: \"150px\",\r\n                        overflowY: \"auto\",\r\n                        ...s.DCProsCard,\r\n                        color: s.DCProsHeader,\r\n                      }}\r\n                    >\r\n                      {el.items.map((opt, i) => (\r\n                        <div\r\n                          key={i}\r\n                          className={styles.OSListItem}\r\n                          style={s.VSSwitchBtn}\r\n                          onClick={() => {\r\n                            setSelectedItems((prev) => {\r\n                              const newArr = [...prev];\r\n                              newArr[index] = i;\r\n                              return newArr;\r\n                            });\r\n                          }}\r\n                        >\r\n                          {opt}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default function VirtualServersPage({ windowSize }) {\r\n  const { lang, changeLang, t } = useLang();\r\n  const { s, toggleTheme } = useTheme();\r\n  const [curCountry, setCurCountry] = useState(\"ger\");\r\n  const countryStyle = (country) => curCountry === country && styles.selected;\r\n  const switchBtn = windowSize.isXs\r\n    ? { minWidth: \"100%\" }\r\n    : { \"--min-width\": \"clamp(200px, 30vw, 238px)\" };\r\n\r\n  return (\r\n    <>\r\n      <MainBanner isLg={windowSize.isLg} isXl={windowSize.isXl} />\r\n      <div className=\"d-flex justify-content-center mt-5\">\r\n        <div\r\n          className={styles.countrySwitch}\r\n          style={{ ...s.VSSwitchMenu, ...switchBtn }}\r\n        >\r\n          <div\r\n            className={`${styles.switchHalf} ${countryStyle(\"ger\")}`}\r\n            onClick={() => setCurCountry(\"ger\")}\r\n            style={{ ...s.VSSwitchBtn, color: s.DCProsHeader }}\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 16 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g clip-path=\"url(#clip0_270_54982)\">\r\n                <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                  d=\"M0 8H16V12H0V8Z\"\r\n                  fill=\"#FFD018\"\r\n                />\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                  d=\"M0 4H16V8H0V4Z\"\r\n                  fill=\"#E31D1C\"\r\n                />\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                  d=\"M0 0H16V4H0V0Z\"\r\n                  fill=\"#272727\"\r\n                />\r\n              </g>\r\n              <defs>\r\n                <clipPath id=\"clip0_270_54982\">\r\n                  <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                </clipPath>\r\n              </defs>\r\n            </svg>\r\n            {!windowSize.isXs && (\r\n              <span className=\"ms-1\">{t(\"VSSwitchBtn1\")}</span>\r\n            )}\r\n          </div>\r\n          <div\r\n            className={`${styles.switchHalf} ${countryStyle(\"fin\")}`}\r\n            onClick={() => setCurCountry(\"fin\")}\r\n            style={{ ...s.VSSwitchBtn, color: s.DCProsHeader }}\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 16 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g clip-path=\"url(#clip0_270_55199)\">\r\n                <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                <path\r\n                  fill-rule=\"evenodd\"\r\n                  clip-rule=\"evenodd\"\r\n                  d=\"M0 0V12H16V0H0Z\"\r\n                  fill=\"#F6F6F6\"\r\n                />\r\n                <mask\r\n                  id=\"mask0_270_55199\"\r\n                  style={{ maskType: \"luminance\" }}\r\n                  maskUnits=\"userSpaceOnUse\"\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  width=\"16\"\r\n                  height=\"12\"\r\n                >\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M0 0V12H16V0H0Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </mask>\r\n                <g mask=\"url(#mask0_270_55199)\">\r\n                  <path\r\n                    fill-rule=\"evenodd\"\r\n                    clip-rule=\"evenodd\"\r\n                    d=\"M5 0H7V5H16V7H7V12H5V7H0V5H5V0Z\"\r\n                    fill=\"#2E42A5\"\r\n                  />\r\n                </g>\r\n              </g>\r\n              <rect\r\n                x=\"0.1\"\r\n                y=\"0.1\"\r\n                width=\"15.8\"\r\n                height=\"11.8\"\r\n                stroke=\"#C7C7C7\"\r\n                stroke-width=\"0.2\"\r\n              />\r\n              <defs>\r\n                <clipPath id=\"clip0_270_55199\">\r\n                  <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                </clipPath>\r\n              </defs>\r\n            </svg>\r\n\r\n            {!windowSize.isXs && (\r\n              <span className=\"ms-1\">{t(\"VSSwitchBtn2\")}</span>\r\n            )}\r\n          </div>\r\n          <div\r\n            className={`${styles.switchHalf} ${countryStyle(\"net\")}`}\r\n            onClick={() => setCurCountry(\"net\")}\r\n            style={{ ...s.VSSwitchBtn, color: s.DCProsHeader }}\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 16 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g clipPath=\"url(#clip0_270_55203)\">\r\n                <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  clipRule=\"evenodd\"\r\n                  d=\"M0 0V12H16V0H0Z\"\r\n                  fill=\"#F7FCFF\"\r\n                />\r\n                <mask\r\n                  id=\"mask0_270_55203\"\r\n                  style={{ maskType: \"luminance\" }}\r\n                  maskUnits=\"userSpaceOnUse\"\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  width=\"16\"\r\n                  height=\"12\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0 0V12H16V0H0Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </mask>\r\n                <g mask=\"url(#mask0_270_55203)\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0 0V4H16V0H0Z\"\r\n                    fill=\"#E31D1C\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0 8V12H16V8H0Z\"\r\n                    fill=\"#3D58DB\"\r\n                  />\r\n                </g>\r\n              </g>\r\n              <defs>\r\n                <clipPath id=\"clip0_270_55203\">\r\n                  <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                </clipPath>\r\n              </defs>\r\n            </svg>\r\n            {!windowSize.isXs && (\r\n              <span className=\"ms-1\">{t(\"VSSwitchBtn3\")}</span>\r\n            )}\r\n          </div>\r\n          <div\r\n            className={`${styles.switchHalf} ${countryStyle(\"est\")}`}\r\n            onClick={() => setCurCountry(\"est\")}\r\n            style={{ ...s.VSSwitchBtn, color: s.DCProsHeader }}\r\n          >\r\n            <svg\r\n              width=\"16\"\r\n              height=\"12\"\r\n              viewBox=\"0 0 16 12\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <g clipPath=\"url(#clip0_270_54991)\">\r\n                <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  clipRule=\"evenodd\"\r\n                  d=\"M0 0V12H16V0H0Z\"\r\n                  fill=\"#F7FCFF\"\r\n                />\r\n                <mask\r\n                  id=\"mask0_270_54991\"\r\n                  style={{ maskType: \"luminance\" }}\r\n                  maskUnits=\"userSpaceOnUse\"\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  width=\"16\"\r\n                  height=\"12\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0 0V12H16V0H0Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </mask>\r\n                <g mask=\"url(#mask0_270_54991)\">\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0 0V4H16V0H0Z\"\r\n                    fill=\"#40A8FF\"\r\n                  />\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    clipRule=\"evenodd\"\r\n                    d=\"M0 4V8H16V4H0Z\"\r\n                    fill=\"#272727\"\r\n                  />\r\n                </g>\r\n              </g>\r\n              <defs>\r\n                <clipPath id=\"clip0_270_54991\">\r\n                  <rect width=\"16\" height=\"12\" fill=\"white\" />\r\n                </clipPath>\r\n              </defs>\r\n            </svg>\r\n            {!windowSize.isXs && (\r\n              <span className=\"ms-1\">{t(\"VSSwitchBtn5\")}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <CountryCards curCountry={curCountry} />\r\n      <MinorHeader\r\n        header={t(\"VSMinorHeader\")}\r\n        description1={t(\"VSMinorHeaderText\")}\r\n        isXs={windowSize.isXs}\r\n        isSm={windowSize.isSm}\r\n      />\r\n      <ProsModule2 isXl={windowSize.isXl} />\r\n      <OSBlock {...windowSize} />\r\n      <MinorBanner isLg={windowSize.isLg} isXl={windowSize.isXl} />\r\n    </>\r\n  );\r\n}\r\n"],"names":["MainBanner","_ref","isLg","isXl","s","toggleTheme","useTheme","lang","changeLang","t","useLang","_jsx","className","styles","mainBannerContainer","style","VSMainBanner","children","_jsxs","Row","Col","xs","md","concat","mainBannerTextBlock","color","DCProsHeader","letterSpacing","DCProsText","width","height","viewBox","fill","xmlns","VSMainBannerIcon","motion","path","d","stroke","strokeWidth","animate","y","transition","duration","ease","times","repeat","Infinity","repeatDelay","CountryCard","_ref2","header","price","cpu","vcpu","ram","size","ddos","gpu","hint","setHint","index","description","descriptionHint","setDescriptionHint","useState","params","key","val","countryCard","_objectSpread","DCProsCard","countryHeaderContainer","VSCountryCardHeaderContainer","countryBlackEl","backgroundColor","fontSize","margin","guideCard2Bg","display","alignItems","gap","position","onMouseEnter","onMouseLeave","top","left","transform","borderRadius","border","padding","background","fontFamily","whiteSpace","zIndex","map","el","countryParamsRow","countryParamsHeader","VSCountryCardVal","VSHrBg","length","countryParamsText","cardBlinkColor","marginBottom","href","textDecoration","countryBuyBtn","VSMainBannerBtnHover","CountryCards","_ref3","curCountry","cards","ger","fin","net","est","div","initial","opacity","xxl","_createElement","Pros2Card","_ref4","picSrc","descriptionClass","cardDescr","headerClass","cardHeader","divClass","card","pros2CardStructure","cardBg","card2IconBG","marginTop","card2Descr","ProsModule2","_ref5","prosCards","text","pic","_Fragment","lg","MinorBanner","_ref6","minorBanner","minorBannerLeft","VSMinorBannerLeft","minorBannerRight","VSMinorBannerRight","OSBlock","_ref7","isXs","isSm","isMd","openedList","setOpenedList","selectedItems","setSelectedItems","isTooltipVisible","setTooltipVisible","OSItems","icon","os","items","x","rx","info","useEffect","Array","handleClickOutside","event","target","closest","OSList","document","addEventListener","removeEventListener","OSHeader","textAlign","OSText","onClick","sm","OSPanel","OSHeaderWrapper","prev","right","points","maxHeight","overflowY","opt","i","OSListItem","VSSwitchBtn","newArr","VirtualServersPage","_ref8","windowSize","setCurCountry","countryStyle","country","selected","switchBtn","minWidth","countrySwitch","VSSwitchMenu","switchHalf","id","maskType","maskUnits","mask","clipPath","fillRule","clipRule","MinorHeader","description1"],"sourceRoot":""}