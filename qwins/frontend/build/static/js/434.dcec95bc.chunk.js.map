{"version":3,"file":"static/js/434.dcec95bc.chunk.js","mappings":"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","sources":["webpack://react_app/./src/components/ReferralPage.module.css?e4a5","components/ReferralPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"minorHeader\":\"ReferralPage_minorHeader__tnEfF\",\"minorBanner\":\"ReferralPage_minorBanner__nWPVU\",\"btnText\":\"ReferralPage_btnText__66fSo\",\"minorBannerLeft\":\"ReferralPage_minorBannerLeft__fKeB-\",\"minorBannerRight\":\"ReferralPage_minorBannerRight__AGN45\",\"minorBtn\":\"ReferralPage_minorBtn__VN8FZ\",\"card\":\"ReferralPage_card__P68Rb\",\"prosSmallGif\":\"ReferralPage_prosSmallGif__dLyNR\",\"arrowsImg\":\"ReferralPage_arrowsImg__D2RaH\",\"cardHeader\":\"ReferralPage_cardHeader__awIoa\",\"infoBlock\":\"ReferralPage_infoBlock__yvf9G\",\"cardDescr\":\"ReferralPage_cardDescr__QKO6N\",\"notifBlock\":\"ReferralPage_notifBlock__8ObiL\",\"notifText\":\"ReferralPage_notifText__FmThq\",\"notifMoney\":\"ReferralPage_notifMoney__j6oJD\"};","import { Row, Col, Collapse } from \"react-bootstrap\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport \"./HomePage.css\";\r\nimport { useLang } from \"../LangContext\";\r\nimport { useTheme } from \"../ThemeContext\";\r\nimport { QuestionBlock, QuestionCard } from \"./QuestionsModule\";\r\nimport styles from \"./ReferralPage.module.css\";\r\n\r\nfunction QuestionsModule() {\r\n  const [openedCard, setOpenedCard] = useState(null);\r\n  const { lang, changeLang, t } = useLang();\r\n\r\n  const cards = [\r\n    {\r\n      header: t(\"qHeader1\"),\r\n      isOpened: true,\r\n      description: t(\"qDescr1\"),\r\n      key: 0,\r\n    },\r\n    {\r\n      header: t(\"qHeader2\"),\r\n      isOpened: true,\r\n      description: t(\"qDescr2\"),\r\n      key: 1,\r\n    },\r\n    {\r\n      header: t(\"qHeader3\"),\r\n      isOpened: true,\r\n      description: t(\"qDescr3\"),\r\n      key: 2,\r\n    },\r\n    {\r\n      header: t(\"qHeader4\"),\r\n      isOpened: true,\r\n      description: t(\"qDescr4\"),\r\n      key: 3,\r\n    },\r\n  ];\r\n  return (\r\n    <Row className=\"mt-2  gx-3 gy-3\">\r\n      <Col xs={12} md={12} lg={6}>\r\n        <Row xs={1} className=\"gy-2\">\r\n          {cards.map((el) => (\r\n            <Col>\r\n              <QuestionCard\r\n                {...el}\r\n                isOpened={el.key === openedCard}\r\n                setOpened={setOpenedCard}\r\n                index={el.key}\r\n                key={el.key}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Col>\r\n      <Col xs={12} md={6} lg={3}>\r\n        <QuestionBlock\r\n          header={t(\"qCardHeader1\")}\r\n          description={t(\"qCardDescr1\")}\r\n          linkText={t(\"qCardLink1\")}\r\n          link={\"https://wiki.qwins.co/\"}\r\n        />\r\n      </Col>\r\n      <Col xs={12} md={6} lg={3}>\r\n        <QuestionBlock\r\n          header={t(\"qCardHeader2\")}\r\n          description={t(\"qCardDescr2\")}\r\n          linkText={t(\"qCardLink2\")}\r\n          link={\"https://t.me/qwinshelp\"}\r\n        />\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction MinorBanner({ isLg, isXl }) {\r\n  const { lang, changeLang, t } = useLang();\r\n\r\n  const { s, toggleTheme } = useTheme();\r\n  return (\r\n    <div\r\n      className={`${styles.minorBanner} mt-4`}\r\n      style={s.RPMainBanner}\r\n      // style={s.DCProsCard}\r\n    >\r\n      {isXl && (\r\n        <>\r\n          {/* <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"551\"\r\n            height=\"174\"\r\n            viewBox=\"0 0 551 174\"\r\n            fill=\"none\"\r\n            className={styles.minorBannerLeft}\r\n          >\r\n            {s.DCMinorLeft}\r\n          </svg> */}\r\n          <svg\r\n            width=\"360\"\r\n            height=\"274\"\r\n            viewBox=\"0 0 360 274\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={styles.minorBannerLeft}\r\n          >\r\n            {s.RPMainBannerLeft}\r\n          </svg>\r\n\r\n          {/* <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"487\"\r\n            height=\"180\"\r\n            viewBox=\"0 0 487 180\"\r\n            fill=\"none\"\r\n            className={styles.minorBannerRight}\r\n          >\r\n            {s.DCMinorRight}\r\n          </svg> */}\r\n          <svg\r\n            width=\"359\"\r\n            height=\"286\"\r\n            viewBox=\"0 0 359 286\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            className={styles.minorBannerRight}\r\n          >\r\n            {s.RPMainBannerRight}\r\n          </svg>\r\n        </>\r\n      )}\r\n      <h4 style={{ color: s.DCProsHeader }}>{t(\"RPMainBannerHeader\")}</h4>\r\n      <p\r\n        className=\"mt-3\"\r\n        style={{ color: s.RPTextColor }}\r\n        //   style={{ color: s.DCProsText }}\r\n      >\r\n        {t(\"RPMainBannerText1\")}\r\n        {(isLg || isXl) && <br />}\r\n        {t(\"RPMainBannerText2\")}\r\n      </p>\r\n      <a href=\"https://my.qwins.co/\">\r\n        <button\r\n          className={`mt-3 ${styles.minorBtn}`}\r\n          style={{\r\n            color: s.guideCard2Bg,\r\n            ...s.VSMainBannerBtnHover,\r\n          }}\r\n        >\r\n          <span className={styles.btnText}>{t(\"RPMainBannerBtn\")}</span>\r\n        </button>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ProsBigCard({ header, description, style, gifPartTemplate }) {\r\n  const { s, toggleTheme } = useTheme();\r\n\r\n  const divClass = `${styles.card}`;\r\n  const headingPart = (\r\n    <Col xs={12}>\r\n      <h4 style={{ ...s.cardHeader, fontFamily: \"Gilroy-semibold\" }}>\r\n        {header}\r\n      </h4>\r\n      <p\r\n        //   style={s.cardDescr}\r\n        className={styles.cardDescr}\r\n        style={{ color: s.RPTextColor }}\r\n      >\r\n        {description}\r\n      </p>\r\n    </Col>\r\n  );\r\n  const gifPart = (\r\n    <Col xs={12}>\r\n      <div className=\"w-100 d-flex justify-content-center align-items-center\">\r\n        {gifPartTemplate}\r\n      </div>\r\n    </Col>\r\n  );\r\n  return (\r\n    <Col>\r\n      <div\r\n        className={`${divClass} h-100`}\r\n        style={{\r\n          ...s.cardBg,\r\n          padding: style !== 1 ? \"51px 32px 15px 32px\" : \"23px 32px 40px 32px\",\r\n        }}\r\n      >\r\n        <Row className=\"g-0\">\r\n          {style === 1 ? (\r\n            <>\r\n              {headingPart}\r\n              <div className=\"mt-3\"></div>\r\n              {gifPart}\r\n            </>\r\n          ) : (\r\n            <>\r\n              {gifPart}\r\n              <div className=\"mt-3 mt-sm-5\"></div>\r\n              {headingPart}\r\n            </>\r\n          )}\r\n        </Row>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nfunction ProsModule({ isXs, isSm }) {\r\n  const { lang, changeLang, t } = useLang();\r\n  const { s, toggleTheme } = useTheme();\r\n\r\n  return (\r\n    <Row xs={1} lg={2} className=\"gx-5 gy-3 mt-1 mt-lg-4 align-items-stretch\">\r\n      <ProsBigCard\r\n        header={t(\"RPProsHeader1\")}\r\n        description={t(\"RPProsText1\")}\r\n        gifPartTemplate={\r\n          <svg\r\n            width=\"565\"\r\n            height=\"106\"\r\n            viewBox=\"0 0 565 106\"\r\n            fill=\"none\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            {s.RPProsPic}\r\n          </svg>\r\n        }\r\n        style={2}\r\n      />\r\n      <ProsBigCard\r\n        header={t(\"RPProsHeader2\")}\r\n        description={t(\"RPProsText2\")}\r\n        gifPartTemplate={\r\n          <div className=\"w-100\">\r\n            <div className=\"w-100 d-flex justify-content-start\">\r\n              {/* {s.RPNotifLeft} */}\r\n              <div className={styles.notifBlock} style={s.RPNotifBlock}>\r\n                <svg\r\n                  width={isXs ? \"30\" : \"40\"}\r\n                  height={isXs ? \"30\" : \"40\"}\r\n                  viewBox=\"0 0 40 40\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  {s.RPNotifIcon}\r\n                </svg>\r\n                <div className={styles.notifText}>\r\n                  <h6 style={{ color: s.RPBlockHeaderColor }}>\r\n                    {t(\"RPNotifHeader\")}\r\n                  </h6>\r\n                  <p style={{ color: s.RPNotifText }}>{t(\"RPNotifText\")}</p>\r\n                </div>\r\n                <h5\r\n                  className={styles.notifMoney}\r\n                  style={{ color: s.navIconsColor }}\r\n                >\r\n                  +30$\r\n                </h5>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-100 d-flex justify-content-end mt-1 mt-sm-3\">\r\n              <div className={styles.notifBlock} style={s.RPNotifBlock}>\r\n                <svg\r\n                  width={isXs ? \"30\" : \"40\"}\r\n                  height={isXs ? \"30\" : \"40\"}\r\n                  viewBox=\"0 0 40 40\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  {s.RPNotifIcon}\r\n                </svg>\r\n                <div className={styles.notifText}>\r\n                  <h6 style={{ color: s.RPBlockHeaderColor }}>\r\n                    {t(\"RPNotifHeader\")}\r\n                  </h6>\r\n                  <p style={{ color: s.RPNotifText }}>{t(\"RPNotifText\")} </p>\r\n                </div>\r\n                <h5\r\n                  className={styles.notifMoney}\r\n                  style={{ color: s.navIconsColor }}\r\n                >\r\n                  +50$\r\n                </h5>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n        style={1}\r\n      />\r\n    </Row>\r\n  );\r\n}\r\n\r\nfunction InfoBlock({ text }) {\r\n  const { s, toggleTheme } = useTheme();\r\n\r\n  return (\r\n    <div\r\n      className={`${styles.infoBlock} mt-3`}\r\n      style={{ ...s.RMainBanner, color: s.RPBlockHeaderColor }}\r\n    >\r\n      {text}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction InfoModule() {\r\n  const { lang, changeLang, t } = useLang();\r\n\r\n  const infoBlocks = [\r\n    t(\"RPTextBlock1\"),\r\n    t(\"RPTextBlock2\"),\r\n    t(\"RPTextBlock3\"),\r\n    t(\"RPTextBlock4\"),\r\n  ];\r\n  return (\r\n    <div className=\"mt-lg-5\">\r\n      {infoBlocks.map((el, index) => (\r\n        <InfoBlock text={el} key={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ReferralPage({ windowSize, setCurPage }) {\r\n  const { lang, changeLang, t } = useLang();\r\n  const { s, toggleTheme } = useTheme();\r\n\r\n  return (\r\n    <>\r\n      <MinorBanner isLg={windowSize.isLg} isXl={windowSize.isXl} />\r\n      <ProsModule isXs={windowSize.isXs} isSm={windowSize.isSm} />\r\n      <InfoModule />\r\n      {/* <div style={{ textAlign: \"left\" }}>\r\n        <h4\r\n          className={`${styles.minorHeader} mt-5 mb-0`}\r\n          style={{ ...s.minorHeader, fontFamily: \"Gilroy-semibold\" }}\r\n        >\r\n          {t(\"qMinorHeader\")}\r\n        </h4>\r\n      </div>\r\n\r\n      <QuestionsModule /> */}\r\n    </>\r\n  );\r\n}\r\n"],"names":["MinorBanner","_ref","isLg","isXl","lang","changeLang","t","useLang","s","toggleTheme","useTheme","_jsxs","className","concat","styles","minorBanner","style","RPMainBanner","children","_Fragment","_jsx","width","height","viewBox","fill","xmlns","minorBannerLeft","RPMainBannerLeft","minorBannerRight","RPMainBannerRight","color","DCProsHeader","RPTextColor","href","minorBtn","_objectSpread","guideCard2Bg","VSMainBannerBtnHover","btnText","ProsBigCard","_ref2","header","description","gifPartTemplate","divClass","card","headingPart","Col","xs","cardHeader","fontFamily","cardDescr","gifPart","cardBg","padding","Row","ProsModule","_ref3","isXs","isSm","lg","RPProsPic","notifBlock","RPNotifBlock","RPNotifIcon","notifText","RPBlockHeaderColor","RPNotifText","notifMoney","navIconsColor","InfoBlock","_ref4","text","infoBlock","RMainBanner","InfoModule","infoBlocks","map","el","index","ReferralPage","_ref5","windowSize","setCurPage"],"sourceRoot":""}