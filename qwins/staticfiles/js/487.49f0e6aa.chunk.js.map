{"version":3,"file":"static/js/487.49f0e6aa.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/motion-utils/dist/es/global-config.mjs","../node_modules/motion-dom/dist/es/frameloop/order.mjs","../node_modules/motion-dom/dist/es/stats/buffer.mjs","../node_modules/motion-dom/dist/es/frameloop/batcher.mjs","../node_modules/motion-dom/dist/es/frameloop/render-step.mjs","../node_modules/motion-dom/dist/es/frameloop/frame.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","../node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","../node_modules/motion-utils/dist/es/array.mjs","../node_modules/motion-utils/dist/es/subscription-manager.mjs","../node_modules/motion-utils/dist/es/velocity-per-second.mjs","../node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","../node_modules/motion-dom/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/motion-utils/dist/es/pipe.mjs","../node_modules/motion-utils/dist/es/clamp.mjs","../node_modules/motion-utils/dist/es/time-conversion.mjs","../node_modules/motion-dom/dist/es/stats/animation-count.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","../node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/color/utils.mjs","../node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","../node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","../node_modules/motion-dom/dist/es/value/types/color/hex.mjs","../node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","../node_modules/motion-dom/dist/es/value/types/color/index.mjs","../node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","../node_modules/motion-dom/dist/es/value/types/complex/index.mjs","../node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","../node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","../node_modules/motion-dom/dist/es/utils/mix/number.mjs","../node_modules/motion-dom/dist/es/utils/mix/color.mjs","../node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","../node_modules/motion-dom/dist/es/utils/mix/complex.mjs","../node_modules/motion-dom/dist/es/utils/mix/index.mjs","../node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","../node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","../node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","../node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","../node_modules/motion-utils/dist/es/easing/ease.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","../node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","../node_modules/motion-utils/dist/es/easing/back.mjs","../node_modules/motion-utils/dist/es/easing/anticipate.mjs","../node_modules/motion-utils/dist/es/easing/circ.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/motion-utils/dist/es/easing/utils/map.mjs","../node_modules/motion-utils/dist/es/progress.mjs","../node_modules/motion-dom/dist/es/utils/interpolate.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","../node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","../node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","../node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","../node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","../node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","../node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","../node_modules/motion-utils/dist/es/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","../node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","../node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","../node_modules/motion-dom/dist/es/render/dom/style-set.mjs","../node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","../node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","../node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","../node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","../node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","../node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","../node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/motion-dom/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","../node_modules/motion-dom/dist/es/value/types/int.mjs","../node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","../node_modules/motion-dom/dist/es/value/types/maps/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/motion-dom/dist/es/value/types/auto.mjs","../node_modules/motion-dom/dist/es/value/types/test.mjs","../node_modules/motion-dom/dist/es/value/types/dimensions.mjs","../node_modules/motion-utils/dist/es/is-numerical-string.mjs","../node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","../node_modules/motion-utils/dist/es/is-zero-value-string.mjs","../node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","../node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","../node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","../node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","../node_modules/motion-dom/dist/es/value/types/utils/find.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/motion-utils/dist/es/is-object.mjs","../node_modules/motion-dom/dist/es/utils/is-html-element.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs"],"sourcesContent":["import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            const { motionValue } = this.options;\n            if (motionValue && motionValue.updatedAt !== time.now()) {\n                this.tick(time.now());\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                        /**\n                         * Set animation origin after starting animation to avoid layout jump\n                         * caused by stopping previous layout animation\n                         */\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop();\n            this.resumingFrom?.currentAnimation?.stop();\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n"],"names":["useIsomorphicLayoutEffect","isBrowser","useLayoutEffect","useEffect","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","LayoutGroupContext","window","useConstant","init","ref","useRef","current","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","_ref","_transition$key","noop","any","MotionGlobalConfig","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","queue","length","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","setup","read","resolveKeyframes","preUpdate","update","preRender","render","postRender","processBatch","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","_this","options","canTrackVelocity","events","updateAndNotify","currentTime","_this$events$change","_this$events$renderRe","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","_this$events$change2","addDependent","removeDependent","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","_this$dependents","_this$events$destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","combineFunctions","pipe","_len","transformers","_key","clamp","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","activeAnimations","layout","mainThread","waapi","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","test","split","trim","number","parse","transform","alpha","_objectSpread","scale","default","sanitize","round","floatRegex","singleColorRegex","isColorString","type","testProp","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","createUnitType","unit","endsWith","concat","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_v$match","_v$match2","getAnimatableNone","parsed","transformer","map","hueToRgb","q","t","mixImmediate","mixNumber","from","to","progress","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","origin","target","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","_origin$values$origin","originIndex","originValue","matchOrder","mix","mixer","frameloopDriver","passTimestamp","generateLinearEasing","easing","duration","resolution","points","numPoints","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","pow","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","keyframes","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","abs","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","ease","createGeneratorEasing","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","easeIn","easeOut","easeInOut","mirrorEasing","reverseEasing","backOut","backIn","backInOut","anticipate","circIn","acos","circOut","circInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","speed","resolvedKeyframes","filter","transitionTypeMap","decay","tween","replaceTransitionType","WithPromise","updateFinished","finished","_finished","notifyFinished","onResolve","onReject","percentToProgress","JSAnimation","super","startTime","isStopped","holdTime","playbackSpeed","_this$options$onStop","_this$options","tick","teardown","onStop","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","_this$driver","driver","newSpeed","hasChanged","_this$options$onPlay","_this$options2","onPlay","complete","_this$options$onCompl","_this$options3","onComplete","_this$options$onCance","_this$options4","onCancel","stopDriver","sampleTime","attachTimeline","timeline","_this$driver2","allowFlatten","observe","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","y","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","paddingLeft","paddingRight","height","_ref3","_ref4","paddingTop","paddingBottom","top","_bbox","_ref5","left","_ref6","bottom","_ref7","_ref8","right","_ref9","_ref0","_ref1","_ref10","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","_element$getValue","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","currentValue","valueAsRead","readValue","_keyframes$i","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","memo","supportsScrollTimeline","ScrollTimeline","supportsFlags","memoSupports","supportsFlag","memoized","_supportsFlags$suppor","supportsLinearEasing","document","createElement","animate","opacity","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","pseudoElement","keyframeOptions","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","_objectWithoutProperties","_excluded","_options$duration","_options$ease","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","_this$animation$finis","_this$animation","commitStyles","_this$animation$commi","_this$animation2","_this$animation$effec","_this$animation$effec2","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","_this$animation$effec3","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","_this$finishedTime","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_this$keyframeResolve2","_this$keyframeResolve","_this$stopTimeline","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","_motionValue$owner","isHTMLElement","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_onReject","_this$keyframeResolve3","_this$keyframeResolve4","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","assign","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","_visualElement$latest","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","setTarget","animateVariant","variant","_visualElement$presen","resolved","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","_visualElement$varian","_child$animationState","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","_this$unmountControls","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","_this$getAxisMotionVa","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","_this$visualElement$p","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this$getAxisMotionVa2","_this$getAxisMotionVa3","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","usePresence","useContext","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","isSVGElement","isObject","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","animationOptions","setAnimationOrigin","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","_this$scroll","checkNodeWasScrollRoot","_this$scroll2","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","_this$parent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","_this$parent2","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","_this$options$visualE","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","_lead$opacity","_follow$opacity","opacityExit","_follow$opacity2","_lead$opacity2","borderLabel","followRadius","leadRadius","mixValues","_this$currentAnimatio","_this$resumingFrom","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","_this$getStack","getPrevLead","_this$getStack2","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","_valuesToRender$opaci","transformOrigin","corrected","num","renderState","vars","resetTree","_node$currentAnimatio","_node$resumeFrom","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","_node$scroll","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","_selectorCache$elemen","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","useCallback","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","_window$MotionHandoff","_window","_window$MotionHasOpti","_window2","lazyContext","PresenceContext","reducedMotionConfig","visualElementRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","_window$MotionHandoff2","_window3","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","_Component$displayNam","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","int","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","attrs","_attrs$transformOrigi","_styleProp$transformB","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_unused","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","_visualElement$getVal","htmlMotionConfig","scrapeMotionValuesFromProps$1","charAt","svgMotionConfig","createMotionComponentFactory","baseConfig","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","_this$removedTransfor","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","_this$getBaseTargetFr","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","_this$presenceContext","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","_this$projection","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","createDomVisualElement","motion","useId"],"sourceRoot":""}